import edu.stanford.nlp.util.logging.Redwood;

import java.io.BufferedReader;
import java.io.FileReader;
import java.util.List;

import edu.stanford.nlp.ling.SentenceUtils;
import edu.stanford.nlp.ling.TaggedWord;
import edu.stanford.nlp.ling.HasWord;
import edu.stanford.nlp.tagger.maxent.MaxentTagger;

public class POSWrapper {
	
	/** A logger for this class */
	  private static Redwood.RedwoodChannels log = Redwood.channels(POSWrapper.class);
  
	public static void main(String[] args) throws Exception {
		if (args.length != 2) {
	      log.info("usage: java TaggerDemo modelFile fileToTag");
	      //return;
	    }
	    MaxentTagger tagger = new MaxentTagger("/Users/vishwesh/Desktop/Work/btp/stanford-postagger-full-2018-02-27/models/english-left3words-distsim.tagger");
	    List<List<HasWord>> sentences = MaxentTagger.tokenizeText(new BufferedReader(new FileReader("/Users/vishwesh/Desktop/Work/githubClones/my-lovely-BTP/backend-pos/src/sample-input.txt")));
	    for (List<HasWord> sentence : sentences) {
	      List<TaggedWord> tSentence = tagger.tagSentence(sentence);
	      for (TaggedWord taggedWord: tSentence) {
	    	  int temp = 0;
	    	  temp = temp +9;
	    	  System.out.println(taggedWord.tag()+" " + taggedWord.word());
	      }
	      //System.out.println(SentenceUtils.listToString(tSentence, false)+ "\n");
	    }	
	}
}
